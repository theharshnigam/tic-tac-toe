{"version":3,"sources":["components/Square.js","components/Board.js","Helpers.js","components/StatusMessage.js","App.js","index.js"],"names":["Square","value","onClick","isWinningSquares","type","className","Board","board","handleSquareClick","winningSquares","renderSquare","position","includes","calculateWinner","squares","lines","i","length","a","b","c","winner","StatusMessage","current","noMoveLeft","every","el","isXNext","App","NEW_GAME","Array","fill","useState","history","setHistory","currentMove","setCurrentMove","prev","last","newBoard","map","square","pos","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c0fce85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = ({ value, onClick, isWinningSquares }) => {\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"  \r\n                onClick={onClick}\r\n                className = {`square ${isWinningSquares ? 'winning' : ''} ${value === 'X' ? 'text-green' : 'text-orange'}` } \r\n                \r\n            >\r\n                {value}\r\n            </button>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({board, handleSquareClick, winningSquares}) => {\r\n    const renderSquare = (position) => {\r\n\r\n        const isWinningSquares = winningSquares.includes(position);\r\n        return (\r\n            <Square\r\n                value={board[position]}\r\n                onClick={() => handleSquareClick(position)}\r\n                isWinningSquares = {isWinningSquares}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <div className=\"board-row\">\r\n                {/* <Square value={board[0]} onClick={() => {\r\n                    handleSquareClick(0)\r\n                }} /> */}\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;","const calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for(let i = 0 ; i < lines.length; i++ ){\r\n        const [a,b,c] = lines[i];\r\n        if ( squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return {\r\n                winner : squares[a],\r\n                winningSquares : [a,b,c]\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        winner : null,\r\n        winningSquares : []\r\n    }\r\n}\r\n\r\nexport default calculateWinner;","import React from 'react'\r\n\r\nconst StatusMessage = ({ winner, current }) => {\r\n\r\n    const noMoveLeft = current.board.every(el => el != null);\r\n\r\n    // const message = winner ?  : ;\r\n    return (\r\n        <div className = 'status-message'>\r\n        {winner && (\r\n            <>\r\n                Winner is {' '}\r\n                <span className = {winner === 'X' ? 'text-green' : 'text-orange'}>\r\n                    {winner}\r\n                </span>\r\n            </>\r\n        )}\r\n        {!winner && !noMoveLeft &&\r\n        (\r\n            <>\r\n                Next Player is{' '}\r\n                <span className = {current.isXNext ? 'text-green' : 'text-orange'}>\r\n                {current.isXNext ? 'X' : 'O'} {' '}\r\n                </span>\r\n            </>\r\n        )}\r\n            {!winner && noMoveLeft && ( \r\n            <>\r\n                <span className = 'text-green'> X </span> and <span className = 'text-orange'> O </span> tied\r\n            </>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusMessage;\r\n","import React, { useState } from \"react\";\nimport Board from './components/Board';\nimport calculateWinner from \"./Helpers\";\nimport StatusMessage from './components/StatusMessage';\nimport './styles/styles.scss'\n\n\nconst App = () => {\n\n  const NEW_GAME = [\n    { board: Array(9).fill(null), isXNext: true }];\n\n  const [history, setHistory] = useState(NEW_GAME);\n  const [currentMove, setCurrentMove] = useState(0);\n\n  const current = history[currentMove];\n\n  const {winner, winningSquares} = calculateWinner(current.board);\n\n  const handleSquareClick = (position) => {\n    // If already clicked on a square, value will not be changed.\n    if (current.board[position] || winner) {\n      return;\n    }\n\n    setHistory((prev) => {\n      const last = prev[prev.length - 1];\n\n      const newBoard = last.board.map((square, pos) => {\n        if (pos === position) {\n          return last.isXNext ? 'X' : 'O';\n        }\n        return square;\n      });\n      return prev.concat({ board: newBoard, isXNext: !last.isXNext });\n    });\n    // setIsXNext((prev) => !prev);\n\n    setCurrentMove(prev => prev + 1);\n  };\n\n  const startNewGame = () => {\n    setHistory(NEW_GAME );\n    setCurrentMove(0);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1><span className = 'text-orange'>TIC</span> TAC <span className = 'text-green'>TOE</span> </h1>\n      <StatusMessage winner = {winner} current = {current}/>\n      <Board board={current.board} handleSquareClick={handleSquareClick} winningSquares = {winningSquares} />\n      <button type=\"button\" onClick = {startNewGame} className ={`btn-reset ${winner ? 'active' : ''}`}>Start New Game</button>\n      <div className = 'bg-balls' />\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />\n    ,document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}